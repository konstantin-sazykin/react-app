{"version":3,"sources":["components/Music/Music.module.css","components/News/News.module.css","components/Settings/Settings.module.css","components/common/preloader/Preloader.module.css","assets/images/preloader.svg","components/Profile/Profile.module.css","components/Header/Header.module.css","serviceWorker.js","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/index.js","components/Dialogs/Dialogs.jsx","api/api.js","redux/auth-reducer.js","components/Login/Login.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","redux/users-reducer.js","components/Dialogs/Users/Users.jsx","components/common/preloader/Preloader.jsx","redux/users-selectors.js","components/Dialogs/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHOOKs.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/Dialogs/Users/users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormControls.module.css","assets/images/user.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Music","props","className","classes","music_wrapper","News","news_wrapper","Settings","console","log","state","settings_wrapper","initialState","dialogsData","id","name","messagesData","message","dialogsReducer","action","type","body","newMessageBody","DialogItem","path","dialog","active","to","Message","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogsElements","map","messagesElements","item","dialogs_wrapper","dialogs_items","messages","values","sendMessage","instance","Axios","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","then","response","data","delete","post","userId","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","login","isFetching","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","LoginReduxForm","maxLength25","htmlFor","styles","formSummaryError","connect","auth","logIn","stopSubmit","_error","formData","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","compose","sendMessageCreator","users","totalUsersCount","followingInProgress","toggleIsFetching","toggleFollowingInProgress","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","current","p","selectedPage","onClick","e","onPageChanged","users_wrapper","key","src","photos","small","userPhoto","alt","disabled","some","button","unfollow","follow","right_column","title","Preloader","preloader_wrapper","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","setCurrentPage","requestUsers","items","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","onChange","currentTarget","ProfileInfo","profile","profile_info_wrapper","avatar","avatar__wrapper","user","large","avatar__wrapper__img","avatar__wrapper__button","info","info__title","fullName","info__status","posts","likeCounts","profileReducer","newPost","newPostText","likesCount","k","postId","Post","id__wrapper","heart__wrapper","heartCount","maxLength10","MyPosts","memo","postsElements","postsBlock","AddNewPostFormRedux","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","profile_wrapper","ProfileContainer","params","authorisedUserId","getUserProfile","withRouter","Header","header","loginBlock","logout","nav","activeClassName","activeLink","link","HeaderContainer","initialized","appReducer","sidebarReducer","reducers","combineReducers","sideBar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","initializeApp","render","DialogsContainer","AppContainer","SamuraiJSAPP","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4277814.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"music_wrapper\":\"Music_music_wrapper__1ky1O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news_wrapper\":\"News_news_wrapper__3k69B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_wrapper\":\"Settings_settings_wrapper__29Lz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"Preloader_preloader_wrapper__JnKdf\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.a68cb559.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_wrapper\":\"Profile_profile_wrapper__1tftt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__27AyQ\",\"nav\":\"Header_nav__2HwFA\",\"activeLink\":\"Header_activeLink__2pybe\",\"loginBlock\":\"Header_loginBlock__3HKdj\",\"userPhoto\":\"Header_userPhoto__2BNSW\",\"logout\":\"Header_logout__2XlWI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={classes.music_wrapper}>\r\n             <p>Здесь скоро появится наша музыка</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={classes.news_wrapper}>\r\n             <p>Здесь скоро появится какая то новость</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    console.log(props.state)\r\n    return (\r\n        \r\n        <div className={classes.settings_wrapper}>\r\n             <p>Здесь скоро появятся настройки</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Ivan' },\r\n        { id: 2, name: 'Marya' },\r\n        { id: 3, name: 'Ilya' },\r\n        { id: 4, name: 'Jon' },\r\n        { id: 5, name: 'Frank' },\r\n        { id: 6, name: 'Elsa' }\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: 'is not optimized' },\r\n        { id: 2, message: 'Hello' },\r\n        { id: 3, message: 'Privet kak dela?' },\r\n        { id: 4, message: 'Panel is not defined' },\r\n        { id: 5, message: 'This browser is old' },\r\n        { id: 6, message: 'How are you?' }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 6, message: body }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path =  '/dialogs/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n        )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const  hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = {classes.formControl + \" \" + (hasError ? classes.error : \"\") }>\r\n            {props.children}\r\n            { hasError && <span >{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Textarea  = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input  = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return '*';\r\n    \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальная длина  ${maxLength} символов`\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/index.js';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogsData.map((dialog) => {\r\n        return (\r\n            <DialogItem name={dialog.name} id={dialog.id} />\r\n        )\r\n    })\r\n\r\n\r\n\r\n    let messagesElements = state.messagesData.map((item) => {\r\n        return <Message message={item.message} />\r\n    })\r\n    \r\n\r\n\r\n    /*values - объект с ответом формы. вернуть ответ конкретного инпута из формы можно через объект.имя_формы */\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs_wrapper}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit = {addNewMessage} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                validate = {[required, maxLength50]}\r\n                name='newMessageBody' placeholder='введите сообщение'/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить сообщение</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"e079602b-cde8-43ba-b94e-8d14ea8d2fc2\"\r\n    }\r\n})\r\n\r\nexport let userAPI = {\r\n\r\n    getUsers: (currentPage = 1, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unfollow: (id) => {\r\n        return instance.delete(`/follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow: (id) => {\r\n        return instance.post(`/follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getProfile: (userId) => {\r\n        console.warn('Устаревший метод. Используйте object profileAPI');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\nexport let profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status }) //сервак требует в запросе jsonобъект с ключом status\r\n    }\r\n}\r\n\r\nexport let authAPI = {\r\n    me() {\r\n        return instance(`auth/me`);\r\n    },\r\n    logIn(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import {authAPI} from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: {userId, email, login, isAuth} });\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.logIn(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n     \r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n\r\n        }\r\n     }\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/index.js';\r\nimport { connect } from 'react-redux';\r\nimport { logIn} from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    \r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input} name={'email'}\r\n                    placeholder={'Login'}\r\n                    type={\"text\"}\r\n                    validate={[required, maxLength25]} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input}\r\n                    name={'password'}\r\n                    placeholder={'Password'}\r\n                    type={\"password\"}\r\n                    validate={[required, maxLength25]} />\r\n            </div>\r\n            <div>\r\n                <Field component={'input'} name={'rememberMe'} type={\"checkbox\"} id={\"rememberMe\"} />\r\n                <label htmlFor={\"rememberMe\"}>Запомнить меня</label>\r\n            </div>\r\n          { props.error && <div className = {styles.formSummaryError}>\r\n                error\r\n            </div>}\r\n            <div>\r\n                <button type={\"submit\"}>Войти</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n/*\r\n            оборачиваем нашу форму контейнерной компонентой \r\n            с помощью функции, похожей на функцию connect, она создает новую компоненту, \r\n            ее и передаем на отрисовку в вышестоящую компоненту\r\n            также задаем имя для формы, под которым она будет сохранена как ключ в объекте form стейта \r\n*/\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\n/*\r\n            объявлем функцию, которую запустит контейнерная компонента при срабатывании\r\n            onSubmit и передаст в нее данные с формы\r\n*/\r\nconst Login = (props) => {\r\n    const onSubmiten = (formData) => {\r\n        props.logIn(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to = {'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmiten} />\r\n    </div>\r\n}\r\n\r\nlet maxLength25 = maxLengthCreator(25);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logIn})(Login);","import React from 'react';\r\nimport  Redirect  from '../components/Login/Login';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n   let  ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from '../../redux/dialogs-reducer.js';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport  {withAuthRedirect}  from '../../hoc/withAuthRedirect.jsx';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n }\r\n}\r\n\r\n//Во второй вызов compose закидываем целевой объект\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs);\r\n\r\n","import { userAPI } from '../api/api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 7,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//Dispatch\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING, isFetching, userId })\r\n\r\n\r\n//Санки (Thunks)\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, id));\r\n        let data = await userAPI.follow(id);\r\n            if (data.resultCode === 0) {\r\n                dispatch(followSuccess(id));\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, id));\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, id));\r\n        let data = await userAPI.unfollow(id)\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(id));\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, id));\r\n    }\r\n}\r\nexport default usersReducer;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (var i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.current}>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                        onClick={(e) => { props.onPageChanged(p) }}  >{p}</span>\r\n                })}\r\n            </div>\r\n            {props.users.map(u => <div className={styles.users_wrapper} key={u.id}>\r\n                <div>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img  src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"User\" className={styles.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button\r\n                                disabled ={props.followingInProgress.some(id => id === u.id)}\r\n                                className={styles.button}\r\n                                onClick={() => {props.unfollow(u.id) }}>Отписаться</button>\r\n                            : <button\r\n                                disabled ={props.followingInProgress.some(id => id === u.id)}\r\n                                className={styles.button}\r\n                                onClick={() => {props.follow(u.id)}}>Подписаться</button>}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.right_column}>\r\n                    <div>\r\n                        <div className={styles.title}>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </div>\r\n                    <div className={styles.location}>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport preloader from './../../../assets/images/preloader.svg'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n    <div className = {styles.preloader_wrapper}>\r\n        <img src={preloader} alt={\"please< wait\"}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersList = (state) => {\r\n    return state.usersPage.users;\r\n} //примитивный селектор для getUsers\r\n\r\n\r\n\r\nexport const getUsers = createSelector(getUsersList, (users) => {\r\n    return users\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n//селектор - функция, которая принимает state а возвращает необходимую часть ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    requestUsers\r\n} from '../../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../../redux/users-selectors.js'\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n                    < Preloader />\r\n                    : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    // toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(withAuthRedirect,\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingInProgress, requestUsers }),\r\n)(UsersContainer);","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    //hook для переключения режима редактирования \r\n    let [editMode, setEditMode] = useState(false); //локальный стейт \r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status) //отправляем значение статуса на сервер с помощью функции updateStatus\r\n    }\r\n     \r\n    //hook для изменения текста статуса\r\n\r\n    let [status, setStatus] = useState(props.status); //достаем статус из бизнеса и записываем в локальный стейт\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    } \r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]) //в квадратных скобках - зависимость, если она не обновилась, то useEffect не запускается\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <div onClick={activateEditMode} >\r\n                        {props.status || '-----'}\r\n                    </div>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input type=\"text\"\r\n                        autoFocus={true}\r\n                        onBlur = {deactivateEditMode}\r\n                        onChange = {onStatusChange}\r\n                        value = {status} // в значение записываем статус из hook\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport user from '../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHOOKs'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profile_info_wrapper}>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.avatar__wrapper}>\r\n                    <img alt={user} src={props.profile.photos.large != null ? props.profile.photos.large : user} className={classes.avatar__wrapper__img}/>\r\n                </div>\r\n                <button className = {classes.avatar__wrapper__button}>Подписаться</button>\r\n            </div>\r\n            <div className = {classes.info}>\r\n                <div className = {classes.info__title}>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <div className= {classes.info__status}>\r\n                   <ProfileStatusWithHooks status = {props.status} updateStatus = {props.updateStatus}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import { userAPI, profileAPI } from '../api/api';\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"My First message\", likeCounts: 0 },\r\n        { id: 2, message: \"My Second message\", likeCounts: 1 },\r\n        { id: 3, message: \"this message не о чем\", likeCounts: 0 },\r\n        { id: 4, message: 'Какие ваши доказательства?', likeCounts: 3 },\r\n        { id: 1, message: \"My First message\", likeCounts: 0 },\r\n        { id: 2, message: \"My Second message\", likeCounts: 1 },\r\n        { id: 3, message: \"React\", likeCounts: 0 }\r\n    ],\r\n    profile: null,\r\n    status: 'статус из стейта'\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 4\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(k => k.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await userAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={classes.post}>\r\n            <div className={classes.id__wrapper}># {props.id} </div>\r\n            {props.message};\r\n             <div className={classes.heart__wrapper}> ❤ <span className={classes.heartCount}>{props.likeCounts}</span> </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/index'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls.jsx';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n    <form className={classes.addPost} onSubmit = {props.handleSubmit}>\r\n        <div>\r\n            <Field component ={Textarea} \r\n            name = {'newPostText'} \r\n            placeholder={'Поделитесь своими мыслями'} \r\n            validate ={[required, maxLength10]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={classes.button}>Добавить запись</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map((item) => {\r\n        return (\r\n            <Post message={item.message} likeCounts={item.likeCounts} id={item.id} />\r\n        )\r\n    })\r\n\r\n\r\n \r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n             <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer.js';\r\nimport MyPosts from './MyPosts.jsx';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.profile_wrapper}>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer'\r\nimport { withRouter} from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n        return (\r\n           \r\n            <Profile {...this.props} \r\n            profile = {this.props.profile} \r\n            status = {this.props.status} \r\n            updateStatus = {this.props.updateStatus}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    state: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus }),\r\n    withRouter, \r\n    withAuthRedirect)(ProfileContainer);","import React from 'react';\r\nimport classes from \"./Header.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.loginBlock}>\r\n                <div className = {classes.userPhoto}></div>\r\n                {props.isAuth \r\n                ? <div>{props.login} - <span onClick = {props.logout} className={classes.logout} >Выйти</span> </div> \r\n                : <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n            <nav className={classes.nav}>\r\n                <div>\r\n                    <NavLink to=\"/profile\" activeClassName={classes.activeLink} className={classes.link}>Профиль</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/messages\" activeClassName={classes.activeLink}>Сообщения</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/news\" activeClassName={classes.activeLink}>Новости</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/music\" activeClassName={classes.activeLink}>Музыка</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Настройки</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to=\"/users\" activeClassName={classes.activeLink}>Найти пользователей</NavLink>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout })(HeaderContainer);","\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS }); //экш-креэйтер\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n} //санка\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import { applyMiddleware, createStore, compose, combineReducers } from \"redux\";\r\nimport profileReducer from \"./profile-reducer.js\";\r\nimport dialogsReducer from \"./dialogs-reducer.js\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer.js\";\r\nimport authReducer from \"./auth-reducer.js\";\r\nimport appReducer from \"./app-reducer.js\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Dialogs/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { initializeApp } from '../src/redux/app-reducer'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport Preloader from './components/common/preloader/Preloader';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store.js';\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    } else {\n      return (\n        <BrowserRouter>\n          <div className=\"app-wrapper\">\n            <HeaderContainer />\n            <div className=\"app-wrapper_content\">\n              <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n              <Route path='/messages' render={() => <DialogsContainer />} />\n              <Route path='/users' render={() => <UsersContainer />} />\n              <Route path='/login' render={() => <Login />} />\n              <Route path='/news' component={News} />\n              <Route path='/music' component={Music} />\n              <Route path='/settings' component={Settings} />\n            </div>\n          </div>\n        </BrowserRouter>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);  //mapStateToProps не прокидывается, потому null\n//withRouter хз зачем, compose тоже\n\n\nconst SamuraiJSAPP = (props) => {\n  return <BrowserRouter>\n    <Provider store={store} >\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default SamuraiJSAPP;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSAPP from './App';\n\n    ReactDOM.render(<SamuraiJSAPP />, document.getElementById('root'));\n\n\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3rN1I\",\"users_wrapper\":\"users_users_wrapper__3a0c4\",\"right_column\":\"users_right_column__3pllQ\",\"title\":\"users_title__3K4sX\",\"location\":\"users_location__25vc6\",\"selectedPage\":\"users_selectedPage__2kx5h\",\"current\":\"users_current__RuphX\",\"button\":\"users_button__4kgGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__-PvBF\",\"dialogs_items\":\"Dialogs_dialogs_items__3G-ME\",\"active\":\"Dialogs_active__RNltn\",\"dialog\":\"Dialogs_dialog__mELum\",\"messages\":\"Dialogs_messages__1cQ-E\",\"message\":\"Dialogs_message__51ft0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info_wrapper\":\"ProfileInfo_profile_info_wrapper__1InUJ\",\"avatar\":\"ProfileInfo_avatar__388gX\",\"avatar__wrapper\":\"ProfileInfo_avatar__wrapper__23ChC\",\"avatar__wrapper__img\":\"ProfileInfo_avatar__wrapper__img__9-ecq\",\"avatar__wrapper__button\":\"ProfileInfo_avatar__wrapper__button__18_z0\",\"info\":\"ProfileInfo_info__fgTRh\",\"info__title\":\"ProfileInfo_info__title__2ZJtN\",\"info__status\":\"ProfileInfo_info__status__T99cN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2GrKF\",\"error\":\"FormControls_error__3awJv\",\"formSummaryError\":\"FormControls_formSummaryError__2ePWw\"};","module.exports = __webpack_public_path__ + \"static/media/user.5648f452.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1pOF-\",\"posts\":\"MyPosts_posts__28zOY\",\"button\":\"MyPosts_button__2vNlU\",\"addPost\":\"MyPosts_addPost__2e2l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3kFXW\",\"id__wrapper\":\"Post_id__wrapper__3TVyd\",\"heart__wrapper\":\"Post_heart__wrapper__2x_yj\",\"heartCount\":\"Post_heartCount__2E3CQ\"};"],"sourceRoot":""}